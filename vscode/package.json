{
    "name": "scoped-sort",
    "displayName": "Scoped Sort",
    "description": "A feature-rich VSCode extension to smartly sort text, lists, code blocks, imports, arrays, and more â€” all while respecting indentation and structure.",
    "version": "4.0.0",
    "publisher": "karizma",
    "icon": "assets/scoped-sort-red-circle.png",
    "main": "./dist/extension.js",
    "homepage": "https://scopedsort.netlify.app",
    "repository": {
        "type": "git",
        "url": "https://github.com/kitesi/scoped-sort"
    },
    "bugs": {
        "url": "https://github.com/kitesi/scoped-sort/issues"
    },
    "engines": {
        "vscode": "^1.57.0"
    },
    "categories": [
        "Other",
        "Formatters"
    ],
    "keywords": [
        "sort",
        "scoped",
        "sort lines",
        "sort list",
        "sort selection",
        "sort text",
        "sort lines selection",
        "markdown",
        "list",
        "nested",
        "recursive",
        "selection sort",
        "sort text editor",
        "sort multiple lines",
        "smart sort",
        "advanced sort",
        "sort indentation",
        "sort structured text",
        "sort lists recursively",
        "hierarchical sort",
        "vscode sort plugin",
        "vscode formatter",
        "vscode extensions",
        "sort document",
        "sort block",
        "sort sections",
        "sort on save",
        "sort imports",
        "sort JSON",
        "sort YAML",
        "sort markdown lists",
        "sort arrays",
        "sort code snippets",
        "sort comments"
    ],
    "activationEvents": [
        "onStartupFinished",
        "onCommand:scoped-sort.sort",
        "onCommand:scoped-sort.sortComments",
        "onCommand:scoped-sort.addSurroundingSortComments"
    ],
    "contributes": {
        "configuration": {
            "title": "scoped-sort",
            "properties": {
                "scoped-sort.prompt": {
                    "type": "boolean",
                    "default": true,
                    "description": "decides if the program should always prompt/ask for options when executing the main command"
                },
                "scoped-sort.formatSectionsOnSave": {
                    "type": "boolean",
                    "default": false,
                    "description": "decides if the program should try to format sort comment sections on save"
                },
                "scoped-sort.defaultArgs": {
                    "type": "object",
                    "properties": {
                        "prompt": {
                            "type": "string",
                            "default": "",
                            "description": "injects the value into the prompt box when using the main command"
                        },
                        "no-prompt": {
                            "type": "string",
                            "default": "",
                            "description": "when calling the main command with .prompt=false, it will run with these args"
                        },
                        "addSurroundingSortComments": {
                            "type": "string",
                            "default": "",
                            "description": "when calling the addSurroundingSortComments command it will add these args in the sort-start line"
                        }
                    },
                    "default": {}
                }
            }
        },
        "commands": [
            {
                "command": "scoped-sort.sort",
                "title": "Scoped Sort: Main"
            },
            {
                "command": "scoped-sort.sortComments",
                "title": "Scoped Sort: Comments"
            },
            {
                "command": "scoped-sort.addSurroundingSortComments",
                "title": "Scoped Sort: Add Surrounding Sort Comments On Selection"
            }
        ]
    },
    "scripts": {
        "test": "node ./test/runner.js",
        "pretty": "prettier --write src/* test/*",
        "lint": "eslint test/* src/*"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.0",
        "@types/node": "14.x",
        "@types/vscode": "^1.57.0",
        "@typescript-eslint/eslint-plugin": "^5.41.0",
        "@typescript-eslint/parser": "^5.41.0",
        "@vscode/test-electron": "^2.2.0",
        "eslint": "^8.26.0",
        "eslint-config-prettier": "^8.5.0",
        "mocha": "^10.1.0",
        "prettier": "^2.3.2",
        "tape": "^5.2.2"
    },
    "dependencies": {
        "string-content-sort": "^2.3.1"
    }
}
